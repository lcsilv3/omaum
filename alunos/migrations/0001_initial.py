# Generated by Django 5.1.7 on 2025-03-26 11:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cursos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('cpf', models.CharField(help_text='Digite apenas números', max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='CPF deve conter 11 dígitos numéricos', regex='^\\d{11}$')], verbose_name='CPF')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='alunos/', verbose_name='Foto')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome completo')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('hora_nascimento', models.TimeField(verbose_name='Hora de nascimento')),
                ('numero_iniciatico', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número iniciático')),
                ('nome_iniciatico', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome iniciático')),
                ('data_iniciacao', models.DateField(blank=True, null=True, verbose_name='Data de iniciação')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Sexo')),
                ('estado_civil', models.CharField(blank=True, choices=[('S', 'Solteiro(a)'), ('C', 'Casado(a)'), ('D', 'Divorciado(a)'), ('V', 'Viúvo(a)'), ('U', 'União Estável')], default='S', max_length=1, null=True, verbose_name='Estado Civil')),
                ('profissao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profissão')),
                ('escolaridade', models.CharField(blank=True, choices=[('EF', 'Ensino Fundamental'), ('EM', 'Ensino Médio'), ('ES', 'Ensino Superior'), ('PG', 'Pós-Graduação'), ('ME', 'Mestrado'), ('DO', 'Doutorado')], max_length=2, null=True, verbose_name='Escolaridade')),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('telefone_fixo', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator(message='Número de telefone fixo inválido', regex='^\\d{10,11}$')], verbose_name='Telefone Fixo')),
                ('nacionalidade', models.CharField(max_length=50, verbose_name='Nacionalidade')),
                ('naturalidade', models.CharField(max_length=50, verbose_name='Naturalidade')),
                ('cep', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='CEP deve conter 8 dígitos numéricos', regex='^\\d{8}$')], verbose_name='CEP')),
                ('rua', models.CharField(max_length=100, verbose_name='Rua')),
                ('numero_imovel', models.CharField(max_length=10, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=50, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=50, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=50, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado')),
                ('nome_primeiro_contato', models.CharField(max_length=100, verbose_name='Nome do primeiro contato')),
                ('celular_primeiro_contato', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Número de celular inválido', regex='^\\d{10,11}$')], verbose_name='Celular do primeiro contato')),
                ('tipo_relacionamento_primeiro_contato', models.CharField(max_length=50, verbose_name='Relacionamento do primeiro contato')),
                ('nome_segundo_contato', models.CharField(max_length=100, verbose_name='Nome do segundo contato')),
                ('celular_segundo_contato', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Número de celular inválido', regex='^\\d{10,11}$')], verbose_name='Celular do segundo contato')),
                ('tipo_relacionamento_segundo_contato', models.CharField(max_length=50, verbose_name='Relacionamento do segundo contato')),
                ('tipo_sanguineo', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O')], max_length=2, verbose_name='Tipo sanguíneo')),
                ('fator_rh', models.CharField(choices=[('+', 'Positivo'), ('-', 'Negativo')], max_length=1, verbose_name='Fator RH')),
                ('alergias', models.TextField(blank=True, null=True, verbose_name='Alergias')),
                ('condicoes_medicas_gerais', models.TextField(blank=True, null=True, verbose_name='Condições médicas')),
                ('convenio_medico', models.CharField(blank=True, max_length=100, null=True, verbose_name='Convênio médico')),
                ('hospital', models.CharField(blank=True, max_length=100, null=True, verbose_name='Hospital de preferência')),
                ('status', models.CharField(choices=[('A', 'Ativo'), ('I', 'Inativo'), ('S', 'Suspenso')], default='A', max_length=1, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('curso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alunos', to='cursos.curso', verbose_name='Curso')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
                'ordering': ['nome'],
            },
        ),
    ]
