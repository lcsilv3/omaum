/**
 * üéØ LOGS DE DEBUG PARA CLIQUES NOS BOT√ïES
 * 
 * INSTRU√á√ïES:
 * 1. Abra a p√°gina de registrar presen√ßas
 * 2. Abra o console do navegador (F12)
 * 3. Cole este c√≥digo completo no console e pressione Enter
 * 4. Agora teste os bot√µes - voc√™ ver√° logs detalhados de cada clique
 */

console.log('üéØ [DEBUG] ===== INSTALANDO LOGS DE CLIQUES =====');

// ===== INTERCEPTA CLIQUES NO BOT√ÉO FINALIZAR =====
document.addEventListener('DOMContentLoaded', function() {
    const btnFinalizar = document.querySelector('button[type="submit"]');
    if (btnFinalizar && btnFinalizar.textContent.includes('Finalizar')) {
        btnFinalizar.addEventListener('click', function(e) {
            console.log('üöÄ [CLIQUE] ===================================');
            console.log('üöÄ [CLIQUE] BOT√ÉO FINALIZAR REGISTRO CLICADO!');
            console.log('üöÄ [CLIQUE] Hora:', new Date().toLocaleString());
            console.log('üöÄ [CLIQUE] Texto do bot√£o:', this.textContent.trim());
            console.log('üöÄ [CLIQUE] ===================================');
        });
        console.log('‚úÖ [DEBUG] Log instalado no bot√£o Finalizar Registro');
    }
});

// ===== INTERCEPTA CLIQUES NOS BOT√ïES DO MODAL =====
function interceptarModal() {
    const modal = document.getElementById('presencaModal');
    if (modal) {
        // Bot√£o Salvar Presen√ßas
        const btnSalvar = modal.querySelector('.btn-salvar-presenca');
        if (btnSalvar && !btnSalvar.hasAttribute('data-debug-log')) {
            btnSalvar.addEventListener('click', function(e) {
                console.log('üíæ [CLIQUE] ===================================');
                console.log('üíæ [CLIQUE] BOT√ÉO SALVAR PRESEN√áAS CLICADO!');
                console.log('üíæ [CLIQUE] Hora:', new Date().toLocaleString());
                console.log('üíæ [CLIQUE] ===================================');
            });
            btnSalvar.setAttribute('data-debug-log', 'true');
            console.log('‚úÖ [DEBUG] Log instalado no bot√£o Salvar Presen√ßas');
        }
        
        // Bot√£o Cancelar
        const btnCancelar = modal.querySelector('.btn-secondary');
        if (btnCancelar && btnCancelar.textContent.includes('Cancelar') && !btnCancelar.hasAttribute('data-debug-log')) {
            btnCancelar.addEventListener('click', function(e) {
                console.log('‚ùå [CLIQUE] ===================================');
                console.log('‚ùå [CLIQUE] BOT√ÉO CANCELAR CLICADO!');
                console.log('‚ùå [CLIQUE] Hora:', new Date().toLocaleString());
                console.log('‚ùå [CLIQUE] ===================================');
            });
            btnCancelar.setAttribute('data-debug-log', 'true');
            console.log('‚úÖ [DEBUG] Log instalado no bot√£o Cancelar');
        }
    }
}

// Executa intercepta√ß√£o inicial
interceptarModal();

// Monitor cont√≠nuo para novos modais
const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
            const modal = document.getElementById('presencaModal');
            if (modal && modal.style.display !== 'none') {
                setTimeout(interceptarModal, 100);
            }
        }
    });
});

const modal = document.getElementById('presencaModal');
if (modal) {
    observer.observe(modal, { attributes: true, attributeFilter: ['style'] });
    console.log('‚úÖ [DEBUG] Monitor de modal instalado');
}

console.log('‚úÖ [DEBUG] Todos os logs de cliques instalados!');
console.log('üìã [DEBUG] Agora teste os bot√µes e veja os logs aqui no console.');

// Fun√ß√£o global para reinstalar se necess√°rio
window.reinstalarLogsDebug = function() {
    interceptarModal();
    console.log('üîÑ [DEBUG] Logs reinstalados!');
};
