# Generated by Django 5.2.5 on 2025-09-05 09:44

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("alunos", "0001_initial"),
        ("atividades", "0001_initial"),
        ("turmas", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AgendamentoRelatorio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        max_length=200, verbose_name="Nome do Agendamento"
                    ),
                ),
                (
                    "formato",
                    models.CharField(
                        choices=[
                            ("excel_basico", "Excel Básico (.xlsx)"),
                            ("excel_avancado", "Excel Profissional (.xlsx)"),
                            ("excel_graficos", "Excel com Gráficos (.xlsx)"),
                            ("csv", "CSV (.csv)"),
                            ("pdf_simples", "PDF Simples (.pdf)"),
                            ("pdf_completo", "PDF Completo (.pdf)"),
                        ],
                        default="excel_avancado",
                        max_length=20,
                        verbose_name="Formato",
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        choices=[
                            ("consolidado_geral", "Consolidado Geral"),
                            ("por_turma", "Relatório por Turma"),
                            ("por_curso", "Relatório por Curso"),
                            ("estatisticas_executivas", "Estatísticas Executivas"),
                            ("carencia_presencas", "Relatório de Carência"),
                            ("comparativo_temporal", "Comparativo Temporal"),
                        ],
                        default="consolidado_geral",
                        max_length=30,
                        verbose_name="Template",
                    ),
                ),
                (
                    "titulo_personalizado",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Título Personalizado"
                    ),
                ),
                (
                    "periodo",
                    models.CharField(
                        choices=[
                            ("atual", "Período Atual"),
                            ("ultimo_mes", "Último Mês"),
                            ("ultimo_trimestre", "Último Trimestre"),
                            ("ultimo_semestre", "Último Semestre"),
                            ("ano_atual", "Ano Atual"),
                            ("personalizado", "Período Personalizado"),
                        ],
                        default="atual",
                        max_length=20,
                        verbose_name="Período",
                    ),
                ),
                (
                    "data_inicio",
                    models.DateField(blank=True, null=True, verbose_name="Data Início"),
                ),
                (
                    "data_fim",
                    models.DateField(blank=True, null=True, verbose_name="Data Fim"),
                ),
                (
                    "curso",
                    models.CharField(blank=True, max_length=200, verbose_name="Curso"),
                ),
                (
                    "incluir_graficos",
                    models.BooleanField(default=True, verbose_name="Incluir Gráficos"),
                ),
                (
                    "incluir_estatisticas",
                    models.BooleanField(
                        default=True, verbose_name="Incluir Estatísticas"
                    ),
                ),
                (
                    "frequencia",
                    models.CharField(
                        choices=[
                            ("diario", "Diário"),
                            ("semanal", "Semanal"),
                            ("quinzenal", "Quinzenal"),
                            ("mensal", "Mensal"),
                            ("trimestral", "Trimestral"),
                            ("semestral", "Semestral"),
                            ("anual", "Anual"),
                        ],
                        default="mensal",
                        max_length=15,
                        verbose_name="Frequência",
                    ),
                ),
                (
                    "dia_semana",
                    models.IntegerField(
                        blank=True,
                        help_text="0=Segunda, 1=Terça, ..., 6=Domingo",
                        null=True,
                        verbose_name="Dia da Semana (0=Segunda)",
                    ),
                ),
                (
                    "dia_mes",
                    models.IntegerField(
                        blank=True,
                        help_text="Dia do mês para execução (1-31)",
                        null=True,
                        verbose_name="Dia do Mês",
                    ),
                ),
                (
                    "hora_execucao",
                    models.TimeField(default="08:00", verbose_name="Hora de Execução"),
                ),
                (
                    "emails_destino",
                    models.TextField(
                        help_text="Emails separados por vírgula",
                        verbose_name="Emails de Destino",
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "proxima_execucao",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Próxima Execução"
                    ),
                ),
                (
                    "ultima_execucao",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última Execução"
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agendamentos_relatorio",
                        to="turmas.turma",
                        verbose_name="Turma",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agendamentos_relatorio",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Agendamento de Relatório",
                "verbose_name_plural": "Agendamentos de Relatórios",
                "ordering": ["-criado_em"],
            },
        ),
        migrations.CreateModel(
            name="ObservacaoPresenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(verbose_name="Data")),
                (
                    "texto",
                    models.TextField(blank=True, null=True, verbose_name="Observação"),
                ),
                (
                    "registrado_por",
                    models.CharField(
                        default="Sistema", max_length=100, verbose_name="Registrado por"
                    ),
                ),
                (
                    "data_registro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de registro",
                    ),
                ),
                (
                    "aluno",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observacoes_presenca_presencas",
                        to="alunos.aluno",
                        verbose_name="Aluno",
                    ),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observacoes_presenca",
                        to="atividades.atividade",
                        verbose_name="Atividade",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observacoes_presenca_presencas",
                        to="turmas.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Observação de Presença",
                "verbose_name_plural": "Observações de Presença",
                "ordering": ["-data"],
            },
        ),
        migrations.CreateModel(
            name="ConfiguracaoPresenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "limite_carencia_0_25",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número máximo de carências para presença entre 0-25%",
                        verbose_name="Limite Carência 0-25%",
                    ),
                ),
                (
                    "limite_carencia_26_50",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número máximo de carências para presença entre 26-50%",
                        verbose_name="Limite Carência 26-50%",
                    ),
                ),
                (
                    "limite_carencia_51_75",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número máximo de carências para presença entre 51-75%",
                        verbose_name="Limite Carência 51-75%",
                    ),
                ),
                (
                    "limite_carencia_76_100",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número máximo de carências para presença entre 76-100%",
                        verbose_name="Limite Carência 76-100%",
                    ),
                ),
                (
                    "obrigatoria",
                    models.BooleanField(
                        default=True,
                        help_text="Define se a atividade é obrigatória para a turma",
                        verbose_name="Obrigatória",
                    ),
                ),
                (
                    "peso_calculo",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1.00"),
                        help_text="Peso da atividade no cálculo geral de carências",
                        max_digits=5,
                        verbose_name="Peso no Cálculo",
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "registrado_por",
                    models.CharField(
                        default="Sistema", max_length=100, verbose_name="Registrado por"
                    ),
                ),
                (
                    "data_registro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de registro",
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data de atualização"
                    ),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuracoes_presenca",
                        to="atividades.atividade",
                        verbose_name="Atividade",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuracoes_presenca",
                        to="turmas.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração de Presença",
                "verbose_name_plural": "Configurações de Presença",
                "ordering": ["turma__nome", "atividade__nome"],
                "unique_together": {("turma", "atividade")},
            },
        ),
        migrations.CreateModel(
            name="ConvocacaoPresenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(verbose_name="Data da Atividade")),
                (
                    "convocado",
                    models.BooleanField(default=True, verbose_name="Convocado"),
                ),
                (
                    "registrado_por",
                    models.CharField(
                        default="Sistema", max_length=100, verbose_name="Registrado por"
                    ),
                ),
                (
                    "data_registro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de registro",
                    ),
                ),
                (
                    "aluno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="convocacoes_presenca",
                        to="alunos.aluno",
                        verbose_name="Aluno",
                    ),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="convocacoes_presenca",
                        to="atividades.atividade",
                        verbose_name="Atividade",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="convocacoes_presenca",
                        to="turmas.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Convocação de Presença",
                "verbose_name_plural": "Convocações de Presença",
                "ordering": ["-data", "aluno__nome"],
                "unique_together": {("aluno", "turma", "atividade", "data")},
            },
        ),
        migrations.CreateModel(
            name="Presenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(verbose_name="Data")),
                (
                    "presente",
                    models.BooleanField(default=True, verbose_name="Presente"),
                ),
                (
                    "justificativa",
                    models.TextField(
                        blank=True, null=True, verbose_name="Justificativa"
                    ),
                ),
                (
                    "registrado_por",
                    models.CharField(
                        default="Sistema", max_length=100, verbose_name="Registrado por"
                    ),
                ),
                (
                    "data_registro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de registro",
                    ),
                ),
                (
                    "aluno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presencas_detalhadas",
                        to="alunos.aluno",
                        verbose_name="Aluno",
                    ),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presencas_detalhadas",
                        to="atividades.atividade",
                        verbose_name="Atividade",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presencas_detalhadas",
                        to="turmas.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Presença",
                "verbose_name_plural": "Presenças",
                "ordering": ["-data", "aluno__nome"],
                "unique_together": {("aluno", "turma", "data", "atividade")},
            },
        ),
        migrations.CreateModel(
            name="PresencaDetalhada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "periodo",
                    models.DateField(
                        help_text="Data representando o mês/ano (usar primeiro dia do mês)",
                        verbose_name="Período (Mês/Ano)",
                    ),
                ),
                (
                    "convocacoes",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de convocações no período",
                        verbose_name="Convocações (C)",
                    ),
                ),
                (
                    "presencas",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de presenças no período",
                        verbose_name="Presenças (P)",
                    ),
                ),
                (
                    "faltas",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de faltas no período",
                        verbose_name="Faltas (F)",
                    ),
                ),
                (
                    "voluntario_extra",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Atividades voluntárias extras",
                        verbose_name="Voluntário Extra (V1)",
                    ),
                ),
                (
                    "voluntario_simples",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Atividades voluntárias simples",
                        verbose_name="Voluntário Simples (V2)",
                    ),
                ),
                (
                    "percentual_presenca",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Calculado automaticamente",
                        max_digits=5,
                        verbose_name="Percentual de Presença (%)",
                    ),
                ),
                (
                    "total_voluntarios",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="V1 + V2",
                        verbose_name="Total de Voluntários",
                    ),
                ),
                (
                    "carencias",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de carências baseado no percentual da turma",
                        verbose_name="Carências",
                    ),
                ),
                (
                    "registrado_por",
                    models.CharField(
                        default="Sistema", max_length=100, verbose_name="Registrado por"
                    ),
                ),
                (
                    "data_registro",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de registro",
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data de atualização"
                    ),
                ),
                (
                    "aluno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presencas_detalhadas_expandidas",
                        to="alunos.aluno",
                        verbose_name="Aluno",
                    ),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presencas_detalhadas_expandidas",
                        to="atividades.atividade",
                        verbose_name="Atividade",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="presencas_detalhadas_expandidas",
                        to="turmas.turma",
                        verbose_name="Turma",
                    ),
                ),
            ],
            options={
                "verbose_name": "Presença Detalhada",
                "verbose_name_plural": "Presenças Detalhadas",
                "ordering": ["-periodo", "aluno__nome"],
                "unique_together": {("aluno", "turma", "atividade", "periodo")},
            },
        ),
        migrations.CreateModel(
            name="TotalAtividadeMes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ano", models.IntegerField()),
                ("mes", models.IntegerField()),
                ("qtd_ativ_mes", models.PositiveIntegerField(default=0)),
                ("registrado_por", models.CharField(default="Sistema", max_length=100)),
                (
                    "data_registro",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="totais_atividade_mes",
                        to="atividades.atividade",
                    ),
                ),
                (
                    "turma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="turmas.turma"
                    ),
                ),
            ],
            options={
                "verbose_name": "Total de Atividade no Mês",
                "verbose_name_plural": "Totais de Atividades no Mês",
                "unique_together": {("atividade", "turma", "ano", "mes")},
            },
        ),
    ]
